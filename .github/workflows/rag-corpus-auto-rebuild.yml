name: RAG Corpus Auto-Rebuild

# Triggers when corpus source files change
on:
  pull_request:
    paths:
      - 'artifacts/telco_churn_expert_v2.md'
      - 'artifacts/telco_churn_expert_v2_index.json'
      - 'scripts/rag/**'
  push:
    branches:
      - main
    paths:
      - 'artifacts/telco_churn_expert_v2.md'
      - 'artifacts/telco_churn_expert_v2_index.json'

jobs:
  rebuild-corpus:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check if corpus rebuild needed
        id: check_rebuild
        run: |
          # Check if public/rag/v2/telco_corpus.json exists
          if [ ! -f "public/rag/v2/telco_corpus.json" ]; then
            echo "needs_rebuild=true" >> $GITHUB_OUTPUT
            echo "reason=Corpus file missing" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Get timestamps
          CORPUS_TIME=$(stat -c %Y public/rag/v2/telco_corpus.json 2>/dev/null || stat -f %m public/rag/v2/telco_corpus.json)
          MD_TIME=$(stat -c %Y artifacts/telco_churn_expert_v2.md 2>/dev/null || stat -f %m artifacts/telco_churn_expert_v2.md)
          INDEX_TIME=$(stat -c %Y artifacts/telco_churn_expert_v2_index.json 2>/dev/null || stat -f %m artifacts/telco_churn_expert_v2_index.json)

          # Check if source files are newer
          if [ $MD_TIME -gt $CORPUS_TIME ] || [ $INDEX_TIME -gt $CORPUS_TIME ]; then
            echo "needs_rebuild=true" >> $GITHUB_OUTPUT
            echo "reason=Source files modified" >> $GITHUB_OUTPUT
          else
            echo "needs_rebuild=false" >> $GITHUB_OUTPUT
            echo "reason=Corpus up-to-date" >> $GITHUB_OUTPUT
          fi

      - name: Rebuild RAG corpus
        if: steps.check_rebuild.outputs.needs_rebuild == 'true'
        env:
          VITE_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CHUNK_TOKENS: 800
          OVERLAP_TOKENS: 120
        run: |
          echo "🔧 Rebuilding RAG corpus: ${{ steps.check_rebuild.outputs.reason }}"
          npm run rag:rebuild

          # Show stats
          echo "📊 Corpus statistics:"
          cat public/rag/v2/metadata.json | jq '.'
          ls -lh public/rag/v2/

      - name: Validate corpus output
        if: steps.check_rebuild.outputs.needs_rebuild == 'true'
        run: |
          # Ensure files exist
          if [ ! -f "public/rag/v2/telco_corpus.json" ]; then
            echo "❌ Error: telco_corpus.json not generated"
            exit 1
          fi

          if [ ! -f "public/rag/v2/metadata.json" ]; then
            echo "❌ Error: metadata.json not generated"
            exit 1
          fi

          # Validate JSON
          jq empty public/rag/v2/telco_corpus.json || (echo "❌ Invalid JSON in telco_corpus.json" && exit 1)
          jq empty public/rag/v2/metadata.json || (echo "❌ Invalid JSON in metadata.json" && exit 1)

          # Check chunk count (should be 7)
          CHUNK_COUNT=$(jq '.chunk_count' public/rag/v2/metadata.json)
          if [ "$CHUNK_COUNT" -lt 7 ]; then
            echo "⚠️ Warning: Expected 7 chunks, got $CHUNK_COUNT"
            jq '.chunks[] | .section_id' public/rag/v2/telco_corpus.json | sort | uniq
            exit 1
          fi

          # Check file size (should be >400KB)
          CORPUS_SIZE=$(stat -c %s public/rag/v2/telco_corpus.json 2>/dev/null || stat -f %z public/rag/v2/telco_corpus.json)
          if [ "$CORPUS_SIZE" -lt 400000 ]; then
            echo "❌ Error: Corpus too small ($CORPUS_SIZE bytes), expected >400KB"
            exit 1
          fi

          echo "✅ Validation passed:"
          echo "   - Chunks: $CHUNK_COUNT"
          echo "   - Size: $(echo "$CORPUS_SIZE / 1024" | bc)KB"

      - name: Commit updated corpus (PRs)
        if: |
          steps.check_rebuild.outputs.needs_rebuild == 'true' &&
          github.event_name == 'pull_request'
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

          git add public/rag/v2/*.json

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            CHUNK_COUNT=$(jq '.chunk_count' public/rag/v2/metadata.json)
            TOKENS=$(jq '.total_tokens' public/rag/v2/metadata.json)

            git commit -m "chore(rag): auto-rebuild corpus - $CHUNK_COUNT chunks, $TOKENS tokens

🤖 Auto-generated by RAG Corpus CI
Triggered by: ${{ steps.check_rebuild.outputs.reason }}"

            git push
          fi

      - name: Commit updated corpus (main)
        if: |
          steps.check_rebuild.outputs.needs_rebuild == 'true' &&
          github.event_name == 'push' &&
          github.ref == 'refs/heads/main'
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

          git add public/rag/v2/*.json

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            CHUNK_COUNT=$(jq '.chunk_count' public/rag/v2/metadata.json)
            TOKENS=$(jq '.total_tokens' public/rag/v2/metadata.json)

            git commit -m "chore(rag): auto-rebuild corpus - $CHUNK_COUNT chunks, $TOKENS tokens

🤖 Auto-generated by RAG Corpus CI
Triggered by: ${{ steps.check_rebuild.outputs.reason }}"

            git push
          fi

      - name: Comment on PR with results
        if: |
          steps.check_rebuild.outputs.needs_rebuild == 'true' &&
          github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const metadata = JSON.parse(fs.readFileSync('public/rag/v2/metadata.json', 'utf8'));

            const comment = `## 🤖 RAG Corpus Auto-Rebuild

            **Status**: ✅ Corpus rebuilt successfully

            **Details**:
            - **Chunks**: ${metadata.chunk_count}
            - **Sections**: ${metadata.section_count}
            - **Total Tokens**: ${metadata.total_tokens.toLocaleString()}
            - **Model**: ${metadata.model}
            - **Trigger**: ${{ steps.check_rebuild.outputs.reason }}

            **Files Updated**:
            - \`public/rag/v2/telco_corpus.json\`
            - \`public/rag/v2/metadata.json\`

            The RAG corpus has been automatically rebuilt with the latest changes to the source markdown or index.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Fail if rebuild needed but not performed
        if: |
          steps.check_rebuild.outputs.needs_rebuild == 'false' &&
          github.event_name == 'pull_request'
        run: |
          echo "✅ Corpus up-to-date, no rebuild needed"
